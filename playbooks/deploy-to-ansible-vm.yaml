---
- hosts: test-vm
  vars:
    user: "panagiotis"
    dockerhub_username: "panagiotishua"
  vars_files:
    - vars/db-password.yaml
  tasks:
    - name: Task - 1 Update APT package manager repositories cache
      become: true
      apt:
        update_cache: yes
    - name: Task - 2 Install Java
      become: true
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - openjdk-11-jdk
    - name: Install Mysql server
      become: yes
      become_method: sudo
      apt:
        name: mysql-server
        state: present
    - name: Start MySql Service
      systemd:
        name: mysql.service
        state: started
    - name: Make sure pymysql is present
      become: true
      pip:
        name: pymysql
        state: present
    - name: Copy sql file with starting data
      copy:
        src: ../SQL/create_and_insert_data.sql
        dest: $PWD
        mode: 0664
    - name: Insert data if db not exists
      shell: sudo mysql -e 'SHOW DATABASES;' | grep free_transportation_system || sudo mysql < create_and_insert_data.sql
    - name: Create user {{ user }}
      become: true
      mysql_user:
        name: "{{ user }}"
        password: "{{ DB_PASSWORD }}"
        host: localhost
        state: present
        update_password: on_create
        priv: "free_transportation_system.*:ALL"
        login_unix_socket: /var/run/mysqld/mysqld.sock
    - name: Remove jar file
      file:
        path: /home/{{ user }}/FreeTransportation-0.0.1-SNAPSHOT.jar
        state: absent
    - name: Copy jar file
      copy:
        src: ../target/FreeTransportation-0.0.1-SNAPSHOT.jar
        dest: /home/"{{ user }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0664'
    - name: Restart springapp Service
      become: true
      systemd:
        name: springapp.service
        state: restarted
    - name: Copy auth file
      copy:
        src: ../auth.file
        dest: /home/"{{ user }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0664'
    - name: Recreate mailhog container
      docker_container:
        name: mailhog
        image: "{{ dockerhub_username }}/mailhog"
        state: present
        recreate: yes
        ports:
          - "1025:1025"
          - "8025:8025"
    - name: Run mailhog container
      docker_container:
        name: mailhog
        state: started
        restart: yes