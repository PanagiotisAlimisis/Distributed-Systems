---
- hosts: docker-vm
  vars:
    docker_group: "docker"
    user: "docker"
    network_name: "net"
    db_image_name: "db"
    db_container_name: "db"
    app_image_name: "springapp"
    app_container_name: "app"
    dockerhub_username: "panagiotishua"
  vars_files:
    - vars/db-password.yaml
  tasks:
    - name: Create a network
      docker_network:
        name: "{{ network_name }}"
    - name: Create/Update the mailhog container
      docker_container:
        name: mailhog
        image: "{{ dockerhub_username }}/mailhog"
        pull: true
        restart_policy: always
        networks:
          - name: "{{ network_name }}"
        ports:
          - "1025:1025"
          - "8025:8025"
        state: started
        restart: yes
    - name: Create/Update the db container
      docker_container:
        name: "{{ db_container_name }}"
        image: "{{ dockerhub_username }}/{{ db_image_name }}"
        pull: true
        restart_policy: always
        networks:
          - name: "{{ network_name }}"
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: "{{ DB_PASSWORD }}"
        volumes:
          - data:/var/lib/mysql
        state: started
        restart: yes
    - name: Create/Update the app container
      docker_container:
        name: "{{ app_container_name }}"
        image: "{{ dockerhub_username }}/{{ app_image_name }}"
        pull: true
        restart_policy: always
        networks:
          - name: "{{ network_name }}"
        ports:
          - "8080:8080"
        env:
          DB_USER: 'root'
          DB_PASSWORD: "{{ DB_PASSWORD }}"
          DB_HOST: db
          DB_PORT: "3306"
          MAILHOG_HOST: mailhog
        state: started
        restart: yes